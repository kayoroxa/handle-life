// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  name       String?
  blocked    Boolean    @default(false)
  isAdmin    Boolean    @default(false)
  imgUrl     String?
  categories Category[]
  tasks      Task[]
}

model Category {
  id     Int    @id @default(autoincrement())
  name   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @map("user_id")
  tasks  Task[] // Relacionamento para tarefas que pertencem a esta categoria
}

model Task {
  id                      Int       @id @default(autoincrement())
  name                    String
  weeklyTarget            Float
  projectCompletionTarget Float
  unitBigLabel            String    @default("hours")
  unitSmallLabel          String    @default("min")
  percent                 Float     @default(0)
  isDone                  Boolean   @default(false)
  totalCompleted          Float     @default(0)
  lastDoneDate            DateTime  @default(now())
  user                    User      @relation(fields: [userId], references: [id])
  userId                  Int       @map("user_id")
  taskLogs                TaskLog[]
  notes                   String?
  createdAt               DateTime  @default(now())

  categories Category[] // Relacionamento para m√∫ltiplas categorias
}

model TaskLog {
  id         Int      @id @default(autoincrement())
  date       DateTime @default(now())
  task       Task     @relation(fields: [taskId], references: [id])
  taskId     Int      @map("task_id")
  doneAmount Float
}
